// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: car_message.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CarType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CarType) Reset() {
	*x = CarType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_car_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarType) ProtoMessage() {}

func (x *CarType) ProtoReflect() protoreflect.Message {
	mi := &file_car_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarType.ProtoReflect.Descriptor instead.
func (*CarType) Descriptor() ([]byte, []int) {
	return file_car_message_proto_rawDescGZIP(), []int{0}
}

func (x *CarType) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CarType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CarMark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CarType   *CarType               `protobuf:"bytes,5,opt,name=car_type,json=carType,proto3" json:"car_type,omitempty"`
	NameRus   string                 `protobuf:"bytes,6,opt,name=name_rus,json=nameRus,proto3" json:"name_rus,omitempty"`
}

func (x *CarMark) Reset() {
	*x = CarMark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_car_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarMark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarMark) ProtoMessage() {}

func (x *CarMark) ProtoReflect() protoreflect.Message {
	mi := &file_car_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarMark.ProtoReflect.Descriptor instead.
func (*CarMark) Descriptor() ([]byte, []int) {
	return file_car_message_proto_rawDescGZIP(), []int{1}
}

func (x *CarMark) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CarMark) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CarMark) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CarMark) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CarMark) GetCarType() *CarType {
	if x != nil {
		return x.CarType
	}
	return nil
}

func (x *CarMark) GetNameRus() string {
	if x != nil {
		return x.NameRus
	}
	return ""
}

var File_car_message_proto protoreflect.FileDescriptor

var file_car_message_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x61, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x63, 0x61, 0x72, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x07, 0x43, 0x61,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x07, 0x43, 0x61,
	0x72, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x2b, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x07, 0x63, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x73, 0x32, 0x4a, 0x0a, 0x0e, 0x53, 0x61, 0x6c, 0x65, 0x43,
	0x61, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x10, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4d, 0x61, 0x72,
	0x6b, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_car_message_proto_rawDescOnce sync.Once
	file_car_message_proto_rawDescData = file_car_message_proto_rawDesc
)

func file_car_message_proto_rawDescGZIP() []byte {
	file_car_message_proto_rawDescOnce.Do(func() {
		file_car_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_car_message_proto_rawDescData)
	})
	return file_car_message_proto_rawDescData
}

var file_car_message_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_car_message_proto_goTypes = []interface{}{
	(*CarType)(nil),               // 0: salecar.CarType
	(*CarMark)(nil),               // 1: salecar.CarMark
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 3: google.protobuf.Empty
}
var file_car_message_proto_depIdxs = []int32{
	2, // 0: salecar.CarMark.created_at:type_name -> google.protobuf.Timestamp
	2, // 1: salecar.CarMark.updated_at:type_name -> google.protobuf.Timestamp
	0, // 2: salecar.CarMark.car_type:type_name -> salecar.CarType
	3, // 3: salecar.SaleCarService.GetCarMark:input_type -> google.protobuf.Empty
	1, // 4: salecar.SaleCarService.GetCarMark:output_type -> salecar.CarMark
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_car_message_proto_init() }
func file_car_message_proto_init() {
	if File_car_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_car_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_car_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarMark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_car_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_car_message_proto_goTypes,
		DependencyIndexes: file_car_message_proto_depIdxs,
		MessageInfos:      file_car_message_proto_msgTypes,
	}.Build()
	File_car_message_proto = out.File
	file_car_message_proto_rawDesc = nil
	file_car_message_proto_goTypes = nil
	file_car_message_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SaleCarServiceClient is the client API for SaleCarService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SaleCarServiceClient interface {
	GetCarMark(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CarMark, error)
}

type saleCarServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSaleCarServiceClient(cc grpc.ClientConnInterface) SaleCarServiceClient {
	return &saleCarServiceClient{cc}
}

func (c *saleCarServiceClient) GetCarMark(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CarMark, error) {
	out := new(CarMark)
	err := c.cc.Invoke(ctx, "/salecar.SaleCarService/GetCarMark", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SaleCarServiceServer is the server API for SaleCarService service.
type SaleCarServiceServer interface {
	GetCarMark(context.Context, *emptypb.Empty) (*CarMark, error)
}

// UnimplementedSaleCarServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSaleCarServiceServer struct {
}

func (*UnimplementedSaleCarServiceServer) GetCarMark(context.Context, *emptypb.Empty) (*CarMark, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCarMark not implemented")
}

func RegisterSaleCarServiceServer(s *grpc.Server, srv SaleCarServiceServer) {
	s.RegisterService(&_SaleCarService_serviceDesc, srv)
}

func _SaleCarService_GetCarMark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SaleCarServiceServer).GetCarMark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salecar.SaleCarService/GetCarMark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SaleCarServiceServer).GetCarMark(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _SaleCarService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "salecar.SaleCarService",
	HandlerType: (*SaleCarServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCarMark",
			Handler:    _SaleCarService_GetCarMark_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "car_message.proto",
}
